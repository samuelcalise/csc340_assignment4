{"message":"type `rgb_float_values` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/format.rs","byte_start":60,"byte_end":76,"line_start":4,"line_end":4,"column_start":8,"column_end":24,"is_primary":true,"text":[{"text":"struct rgb_float_values","highlight_start":8,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_camel_case_types)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/format.rs","byte_start":60,"byte_end":76,"line_start":4,"line_end":4,"column_start":8,"column_end":24,"is_primary":true,"text":[{"text":"struct rgb_float_values","highlight_start":8,"highlight_end":24}],"label":null,"suggested_replacement":"RgbFloatValues","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `rgb_float_values` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/format.rs:4:8\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct rgb_float_values\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `RgbFloatValues`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_camel_case_types)]` on by default\u001b[0m\n\n"}
{"message":"type `ypbpr_values` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/value_conversion.rs","byte_start":25,"byte_end":37,"line_start":3,"line_end":3,"column_start":8,"column_end":20,"is_primary":true,"text":[{"text":"struct ypbpr_values","highlight_start":8,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/value_conversion.rs","byte_start":25,"byte_end":37,"line_start":3,"line_end":3,"column_start":8,"column_end":20,"is_primary":true,"text":[{"text":"struct ypbpr_values","highlight_start":8,"highlight_end":20}],"label":null,"suggested_replacement":"YpbprValues","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `ypbpr_values` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/value_conversion.rs:3:8\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct ypbpr_values\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `YpbprValues`\u001b[0m\n\n"}
{"message":"type `rgb_float_values` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/value_conversion.rs","byte_start":106,"byte_end":122,"line_start":10,"line_end":10,"column_start":8,"column_end":24,"is_primary":true,"text":[{"text":"struct rgb_float_values","highlight_start":8,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/value_conversion.rs","byte_start":106,"byte_end":122,"line_start":10,"line_end":10,"column_start":8,"column_end":24,"is_primary":true,"text":[{"text":"struct rgb_float_values","highlight_start":8,"highlight_end":24}],"label":null,"suggested_replacement":"RgbFloatValues","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `rgb_float_values` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/value_conversion.rs:10:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct rgb_float_values\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `RgbFloatValues`\u001b[0m\n\n"}
{"message":"arguments to this function are incorrect","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/codec.rs","byte_start":1344,"byte_end":1362,"line_start":53,"line_end":53,"column_start":23,"column_end":41,"is_primary":true,"text":[{"text":"    let Y_Pb_Pr_vec = rgb_float_to_ypbpr(&current_img, &rgb_float_img, current_width, current_height);","highlight_start":23,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected `Vec<ypbpr_values>`, found `&Vec<Rgb>`","code":null,"level":"note","spans":[{"file_name":"src/codec.rs","byte_start":1363,"byte_end":1375,"line_start":53,"line_end":53,"column_start":42,"column_end":54,"is_primary":true,"text":[{"text":"    let Y_Pb_Pr_vec = rgb_float_to_ypbpr(&current_img, &rgb_float_img, current_width, current_height);","highlight_start":42,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"expected struct `Vec<ypbpr_values>`\nfound reference `&Vec<csc411_image::Rgb>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"expected `rgb_float_values`, found `format::rgb_float_values`","code":null,"level":"note","spans":[{"file_name":"src/codec.rs","byte_start":1377,"byte_end":1391,"line_start":53,"line_end":53,"column_start":56,"column_end":70,"is_primary":true,"text":[{"text":"    let Y_Pb_Pr_vec = rgb_float_to_ypbpr(&current_img, &rgb_float_img, current_width, current_height);","highlight_start":56,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"`format::rgb_float_values` and `rgb_float_values` have similar names, but are actually distinct types","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`format::rgb_float_values` is defined in module `crate::format` of the current crate","code":null,"level":"note","spans":[{"file_name":"src/format.rs","byte_start":53,"byte_end":76,"line_start":4,"line_end":4,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"struct rgb_float_values","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"`rgb_float_values` is defined in module `crate::value_conversion` of the current crate","code":null,"level":"note","spans":[{"file_name":"src/value_conversion.rs","byte_start":99,"byte_end":122,"line_start":10,"line_end":10,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"struct rgb_float_values","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/value_conversion.rs","byte_start":199,"byte_end":226,"line_start":17,"line_end":17,"column_start":27,"column_end":54,"is_primary":false,"text":[{"text":"pub fn rgb_float_to_ypbpr(init_img: Vec<ypbpr_values>, float_img_values: &Vec<rgb_float_values> , width: u32, height: u32) -> Vec<ypbpr_values>","highlight_start":27,"highlight_end":54}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/value_conversion.rs","byte_start":228,"byte_end":268,"line_start":17,"line_end":17,"column_start":56,"column_end":96,"is_primary":false,"text":[{"text":"pub fn rgb_float_to_ypbpr(init_img: Vec<ypbpr_values>, float_img_values: &Vec<rgb_float_values> , width: u32, height: u32) -> Vec<ypbpr_values>","highlight_start":56,"highlight_end":96}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/value_conversion.rs","byte_start":271,"byte_end":281,"line_start":17,"line_end":17,"column_start":99,"column_end":109,"is_primary":false,"text":[{"text":"pub fn rgb_float_to_ypbpr(init_img: Vec<ypbpr_values>, float_img_values: &Vec<rgb_float_values> , width: u32, height: u32) -> Vec<ypbpr_values>","highlight_start":99,"highlight_end":109}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/value_conversion.rs","byte_start":283,"byte_end":294,"line_start":17,"line_end":17,"column_start":111,"column_end":122,"is_primary":false,"text":[{"text":"pub fn rgb_float_to_ypbpr(init_img: Vec<ypbpr_values>, float_img_values: &Vec<rgb_float_values> , width: u32, height: u32) -> Vec<ypbpr_values>","highlight_start":111,"highlight_end":122}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/value_conversion.rs","byte_start":180,"byte_end":198,"line_start":17,"line_end":17,"column_start":8,"column_end":26,"is_primary":true,"text":[{"text":"pub fn rgb_float_to_ypbpr(init_img: Vec<ypbpr_values>, float_img_values: &Vec<rgb_float_values> , width: u32, height: u32) -> Vec<ypbpr_values>","highlight_start":8,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: arguments to this function are incorrect\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/codec.rs:53:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let Y_Pb_Pr_vec = rgb_float_to_ypbpr(&current_img, &rgb_float_img, current_width, current_height);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: expected `Vec<ypbpr_values>`, found `&Vec<Rgb>`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/codec.rs:53:42\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let Y_Pb_Pr_vec = rgb_float_to_ypbpr(&current_img, &rgb_float_img, current_width, current_height);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected struct `\u001b[0m\u001b[0m\u001b[1mVec<ypbpr_values>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m           found reference `\u001b[0m\u001b[0m\u001b[1m&Vec<csc411_image::Rgb>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: expected `rgb_float_values`, found `format::rgb_float_values`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/codec.rs:53:56\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let Y_Pb_Pr_vec = rgb_float_to_ypbpr(&current_img, &rgb_float_img, current_width, current_height);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `format::rgb_float_values` and `rgb_float_values` have similar names, but are actually distinct types\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `format::rgb_float_values` is defined in module `crate::format` of the current crate\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/format.rs:4:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct rgb_float_values\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `rgb_float_values` is defined in module `crate::value_conversion` of the current crate\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/value_conversion.rs:10:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct rgb_float_values\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/value_conversion.rs:17:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mfn rgb_float_to_ypbpr(init_img: Vec<ypbpr_values>, float_img_values: &Vec<rgb_float_values> , width: u32, height: u32) -\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------\u001b[0m\n\n"}
{"message":"aborting due to previous error; 3 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to previous error; 3 warnings emitted\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}
